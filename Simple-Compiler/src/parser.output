Terminals unused in grammar

    FLOAT_CONSTANT
    STRING
    AUTO
    BREAK
    CASE
    CHAR
    CONST
    CONTINUE
    DEFAULT
    DO
    DOUBLE
    ENUM
    EXTERN
    FLOAT
    GOTO
    LONG
    REGISTER
    RETURN
    SHORT
    SIGNED
    SIZEOF
    STATIC
    STRUCT
    SWITCH
    TYPEDEF
    UNION
    UNSIGNED
    VOID
    VOLATILE
    WHILE
    MODULO
    COMMA
    LBRACKET
    RBRACKET


State 70 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: statement_list

    2 statement_list: ε
    3               | statement_list statement

    4 statement: declaration
    5          | assignment
    6          | if_statement
    7          | for_statement
    8          | block
    9          | increment_statement
   10          | SEMICOLON

   11 declaration_core: INT ID
   12                 | INT ID ASSIGN expression

   13 declaration: declaration_core SEMICOLON

   14 assignment_core: ID ASSIGN expression

   15 assignment: assignment_core SEMICOLON

   16 increment_core: ID INCREMENT
   17               | ID DECREMENT

   18 increment_statement: increment_core SEMICOLON

   19 if_statement: IF LPAREN condition RPAREN statement
   20             | IF LPAREN condition RPAREN statement ELSE statement

   21 for_statement: FOR LPAREN for_init SEMICOLON condition SEMICOLON for_increment RPAREN statement

   22 for_init: assignment_core
   23         | declaration_core
   24         | ε

   25 for_increment: assignment_core
   26              | increment_core
   27              | ε

   28 block: LBRACE statement_list RBRACE

   29 expression: expression PLUS expression
   30           | expression MINUS expression
   31           | expression TIMES expression
   32           | expression DIVIDE expression
   33           | MINUS expression
   34           | LPAREN expression RPAREN
   35           | ID
   36           | CONSTANT

   37 condition: expression GT expression
   38          | expression LT expression
   39          | expression GE expression
   40          | expression LE expression
   41          | expression EQ expression
   42          | expression NE expression


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    ID <str> (258) 11 12 14 16 17 35
    CONSTANT <str> (259) 36
    FLOAT_CONSTANT <str> (260)
    STRING <str> (261)
    AUTO (262)
    BREAK (263)
    CASE (264)
    CHAR (265)
    CONST (266)
    CONTINUE (267)
    DEFAULT (268)
    DO (269)
    DOUBLE (270)
    ELSE (271) 20
    ENUM (272)
    EXTERN (273)
    FLOAT (274)
    FOR (275) 21
    GOTO (276)
    IF (277) 19 20
    INT (278) 11 12
    LONG (279)
    REGISTER (280)
    RETURN (281)
    SHORT (282)
    SIGNED (283)
    SIZEOF (284)
    STATIC (285)
    STRUCT (286)
    SWITCH (287)
    TYPEDEF (288)
    UNION (289)
    UNSIGNED (290)
    VOID (291)
    VOLATILE (292)
    WHILE (293)
    PLUS (294) 29
    MINUS (295) 30 33
    TIMES (296) 31
    DIVIDE (297) 32
    MODULO (298)
    ASSIGN (299) 12 14
    LT (300) 38
    LE (301) 40
    GT (302) 37
    GE (303) 39
    EQ (304) 41
    NE (305) 42
    SEMICOLON (306) 10 13 15 18 21
    COMMA (307)
    LPAREN (308) 19 20 21 34
    RPAREN (309) 19 20 21 34
    LBRACE (310) 28
    RBRACE (311) 28
    LBRACKET (312)
    RBRACKET (313)
    INCREMENT (314) 16
    DECREMENT (315) 17
    UMINUS (316)


Nonterminals, with rules where they appear

    $accept (62)
        on left: 0
    program <statement_list> (63)
        on left: 1
        on right: 0
    statement_list <statement_list> (64)
        on left: 2 3
        on right: 1 3 28
    statement <statement> (65)
        on left: 4 5 6 7 8 9 10
        on right: 3 19 20 21
    declaration_core <statement> (66)
        on left: 11 12
        on right: 13 23
    declaration <statement> (67)
        on left: 13
        on right: 4
    assignment_core <statement> (68)
        on left: 14
        on right: 15 22 25
    assignment <statement> (69)
        on left: 15
        on right: 5
    increment_core <statement> (70)
        on left: 16 17
        on right: 18 26
    increment_statement <statement> (71)
        on left: 18
        on right: 9
    if_statement <statement> (72)
        on left: 19 20
        on right: 6
    for_statement <statement> (73)
        on left: 21
        on right: 7
    for_init <statement> (74)
        on left: 22 23 24
        on right: 21
    for_increment <statement> (75)
        on left: 25 26 27
        on right: 21
    block <statement> (76)
        on left: 28
        on right: 8
    expression <expression> (77)
        on left: 29 30 31 32 33 34 35 36
        on right: 12 14 29 30 31 32 33 34 37 38 39 40 41 42
    condition <condition> (78)
        on left: 37 38 39 40 41 42
        on right: 19 20 21


State 0

    0 $accept: • program $end

    $default  reduce using rule 2 (statement_list)

    program         go to state 1
    statement_list  go to state 2


State 1

    0 $accept: program • $end

    $end  shift, and go to state 3


State 2

    1 program: statement_list •
    3 statement_list: statement_list • statement

    ID         shift, and go to state 4
    FOR        shift, and go to state 5
    IF         shift, and go to state 6
    INT        shift, and go to state 7
    SEMICOLON  shift, and go to state 8
    LBRACE     shift, and go to state 9

    $default  reduce using rule 1 (program)

    statement            go to state 10
    declaration_core     go to state 11
    declaration          go to state 12
    assignment_core      go to state 13
    assignment           go to state 14
    increment_core       go to state 15
    increment_statement  go to state 16
    if_statement         go to state 17
    for_statement        go to state 18
    block                go to state 19


State 3

    0 $accept: program $end •

    $default  accept


State 4

   14 assignment_core: ID • ASSIGN expression
   16 increment_core: ID • INCREMENT
   17               | ID • DECREMENT

    ASSIGN     shift, and go to state 20
    INCREMENT  shift, and go to state 21
    DECREMENT  shift, and go to state 22


State 5

   21 for_statement: FOR • LPAREN for_init SEMICOLON condition SEMICOLON for_increment RPAREN statement

    LPAREN  shift, and go to state 23


State 6

   19 if_statement: IF • LPAREN condition RPAREN statement
   20             | IF • LPAREN condition RPAREN statement ELSE statement

    LPAREN  shift, and go to state 24


State 7

   11 declaration_core: INT • ID
   12                 | INT • ID ASSIGN expression

    ID  shift, and go to state 25


State 8

   10 statement: SEMICOLON •

    $default  reduce using rule 10 (statement)


State 9

   28 block: LBRACE • statement_list RBRACE

    $default  reduce using rule 2 (statement_list)

    statement_list  go to state 26


State 10

    3 statement_list: statement_list statement •

    $default  reduce using rule 3 (statement_list)


State 11

   13 declaration: declaration_core • SEMICOLON

    SEMICOLON  shift, and go to state 27


State 12

    4 statement: declaration •

    $default  reduce using rule 4 (statement)


State 13

   15 assignment: assignment_core • SEMICOLON

    SEMICOLON  shift, and go to state 28


State 14

    5 statement: assignment •

    $default  reduce using rule 5 (statement)


State 15

   18 increment_statement: increment_core • SEMICOLON

    SEMICOLON  shift, and go to state 29


State 16

    9 statement: increment_statement •

    $default  reduce using rule 9 (statement)


State 17

    6 statement: if_statement •

    $default  reduce using rule 6 (statement)


State 18

    7 statement: for_statement •

    $default  reduce using rule 7 (statement)


State 19

    8 statement: block •

    $default  reduce using rule 8 (statement)


State 20

   14 assignment_core: ID ASSIGN • expression

    ID        shift, and go to state 30
    CONSTANT  shift, and go to state 31
    MINUS     shift, and go to state 32
    LPAREN    shift, and go to state 33

    expression  go to state 34


State 21

   16 increment_core: ID INCREMENT •

    $default  reduce using rule 16 (increment_core)


State 22

   17 increment_core: ID DECREMENT •

    $default  reduce using rule 17 (increment_core)


State 23

   21 for_statement: FOR LPAREN • for_init SEMICOLON condition SEMICOLON for_increment RPAREN statement

    ID   shift, and go to state 35
    INT  shift, and go to state 7

    $default  reduce using rule 24 (for_init)

    declaration_core  go to state 36
    assignment_core   go to state 37
    for_init          go to state 38


State 24

   19 if_statement: IF LPAREN • condition RPAREN statement
   20             | IF LPAREN • condition RPAREN statement ELSE statement

    ID        shift, and go to state 30
    CONSTANT  shift, and go to state 31
    MINUS     shift, and go to state 32
    LPAREN    shift, and go to state 33

    expression  go to state 39
    condition   go to state 40


State 25

   11 declaration_core: INT ID •
   12                 | INT ID • ASSIGN expression

    ASSIGN  shift, and go to state 41

    $default  reduce using rule 11 (declaration_core)


State 26

    3 statement_list: statement_list • statement
   28 block: LBRACE statement_list • RBRACE

    ID         shift, and go to state 4
    FOR        shift, and go to state 5
    IF         shift, and go to state 6
    INT        shift, and go to state 7
    SEMICOLON  shift, and go to state 8
    LBRACE     shift, and go to state 9
    RBRACE     shift, and go to state 42

    statement            go to state 10
    declaration_core     go to state 11
    declaration          go to state 12
    assignment_core      go to state 13
    assignment           go to state 14
    increment_core       go to state 15
    increment_statement  go to state 16
    if_statement         go to state 17
    for_statement        go to state 18
    block                go to state 19


State 27

   13 declaration: declaration_core SEMICOLON •

    $default  reduce using rule 13 (declaration)


State 28

   15 assignment: assignment_core SEMICOLON •

    $default  reduce using rule 15 (assignment)


State 29

   18 increment_statement: increment_core SEMICOLON •

    $default  reduce using rule 18 (increment_statement)


State 30

   35 expression: ID •

    $default  reduce using rule 35 (expression)


State 31

   36 expression: CONSTANT •

    $default  reduce using rule 36 (expression)


State 32

   33 expression: MINUS • expression

    ID        shift, and go to state 30
    CONSTANT  shift, and go to state 31
    MINUS     shift, and go to state 32
    LPAREN    shift, and go to state 33

    expression  go to state 43


State 33

   34 expression: LPAREN • expression RPAREN

    ID        shift, and go to state 30
    CONSTANT  shift, and go to state 31
    MINUS     shift, and go to state 32
    LPAREN    shift, and go to state 33

    expression  go to state 44


State 34

   14 assignment_core: ID ASSIGN expression •
   29 expression: expression • PLUS expression
   30           | expression • MINUS expression
   31           | expression • TIMES expression
   32           | expression • DIVIDE expression

    PLUS    shift, and go to state 45
    MINUS   shift, and go to state 46
    TIMES   shift, and go to state 47
    DIVIDE  shift, and go to state 48

    $default  reduce using rule 14 (assignment_core)


State 35

   14 assignment_core: ID • ASSIGN expression

    ASSIGN  shift, and go to state 20


State 36

   23 for_init: declaration_core •

    $default  reduce using rule 23 (for_init)


State 37

   22 for_init: assignment_core •

    $default  reduce using rule 22 (for_init)


State 38

   21 for_statement: FOR LPAREN for_init • SEMICOLON condition SEMICOLON for_increment RPAREN statement

    SEMICOLON  shift, and go to state 49


State 39

   29 expression: expression • PLUS expression
   30           | expression • MINUS expression
   31           | expression • TIMES expression
   32           | expression • DIVIDE expression
   37 condition: expression • GT expression
   38          | expression • LT expression
   39          | expression • GE expression
   40          | expression • LE expression
   41          | expression • EQ expression
   42          | expression • NE expression

    PLUS    shift, and go to state 45
    MINUS   shift, and go to state 46
    TIMES   shift, and go to state 47
    DIVIDE  shift, and go to state 48
    LT      shift, and go to state 50
    LE      shift, and go to state 51
    GT      shift, and go to state 52
    GE      shift, and go to state 53
    EQ      shift, and go to state 54
    NE      shift, and go to state 55


State 40

   19 if_statement: IF LPAREN condition • RPAREN statement
   20             | IF LPAREN condition • RPAREN statement ELSE statement

    RPAREN  shift, and go to state 56


State 41

   12 declaration_core: INT ID ASSIGN • expression

    ID        shift, and go to state 30
    CONSTANT  shift, and go to state 31
    MINUS     shift, and go to state 32
    LPAREN    shift, and go to state 33

    expression  go to state 57


State 42

   28 block: LBRACE statement_list RBRACE •

    $default  reduce using rule 28 (block)


State 43

   29 expression: expression • PLUS expression
   30           | expression • MINUS expression
   31           | expression • TIMES expression
   32           | expression • DIVIDE expression
   33           | MINUS expression •

    $default  reduce using rule 33 (expression)


State 44

   29 expression: expression • PLUS expression
   30           | expression • MINUS expression
   31           | expression • TIMES expression
   32           | expression • DIVIDE expression
   34           | LPAREN expression • RPAREN

    PLUS    shift, and go to state 45
    MINUS   shift, and go to state 46
    TIMES   shift, and go to state 47
    DIVIDE  shift, and go to state 48
    RPAREN  shift, and go to state 58


State 45

   29 expression: expression PLUS • expression

    ID        shift, and go to state 30
    CONSTANT  shift, and go to state 31
    MINUS     shift, and go to state 32
    LPAREN    shift, and go to state 33

    expression  go to state 59


State 46

   30 expression: expression MINUS • expression

    ID        shift, and go to state 30
    CONSTANT  shift, and go to state 31
    MINUS     shift, and go to state 32
    LPAREN    shift, and go to state 33

    expression  go to state 60


State 47

   31 expression: expression TIMES • expression

    ID        shift, and go to state 30
    CONSTANT  shift, and go to state 31
    MINUS     shift, and go to state 32
    LPAREN    shift, and go to state 33

    expression  go to state 61


State 48

   32 expression: expression DIVIDE • expression

    ID        shift, and go to state 30
    CONSTANT  shift, and go to state 31
    MINUS     shift, and go to state 32
    LPAREN    shift, and go to state 33

    expression  go to state 62


State 49

   21 for_statement: FOR LPAREN for_init SEMICOLON • condition SEMICOLON for_increment RPAREN statement

    ID        shift, and go to state 30
    CONSTANT  shift, and go to state 31
    MINUS     shift, and go to state 32
    LPAREN    shift, and go to state 33

    expression  go to state 39
    condition   go to state 63


State 50

   38 condition: expression LT • expression

    ID        shift, and go to state 30
    CONSTANT  shift, and go to state 31
    MINUS     shift, and go to state 32
    LPAREN    shift, and go to state 33

    expression  go to state 64


State 51

   40 condition: expression LE • expression

    ID        shift, and go to state 30
    CONSTANT  shift, and go to state 31
    MINUS     shift, and go to state 32
    LPAREN    shift, and go to state 33

    expression  go to state 65


State 52

   37 condition: expression GT • expression

    ID        shift, and go to state 30
    CONSTANT  shift, and go to state 31
    MINUS     shift, and go to state 32
    LPAREN    shift, and go to state 33

    expression  go to state 66


State 53

   39 condition: expression GE • expression

    ID        shift, and go to state 30
    CONSTANT  shift, and go to state 31
    MINUS     shift, and go to state 32
    LPAREN    shift, and go to state 33

    expression  go to state 67


State 54

   41 condition: expression EQ • expression

    ID        shift, and go to state 30
    CONSTANT  shift, and go to state 31
    MINUS     shift, and go to state 32
    LPAREN    shift, and go to state 33

    expression  go to state 68


State 55

   42 condition: expression NE • expression

    ID        shift, and go to state 30
    CONSTANT  shift, and go to state 31
    MINUS     shift, and go to state 32
    LPAREN    shift, and go to state 33

    expression  go to state 69


State 56

   19 if_statement: IF LPAREN condition RPAREN • statement
   20             | IF LPAREN condition RPAREN • statement ELSE statement

    ID         shift, and go to state 4
    FOR        shift, and go to state 5
    IF         shift, and go to state 6
    INT        shift, and go to state 7
    SEMICOLON  shift, and go to state 8
    LBRACE     shift, and go to state 9

    statement            go to state 70
    declaration_core     go to state 11
    declaration          go to state 12
    assignment_core      go to state 13
    assignment           go to state 14
    increment_core       go to state 15
    increment_statement  go to state 16
    if_statement         go to state 17
    for_statement        go to state 18
    block                go to state 19


State 57

   12 declaration_core: INT ID ASSIGN expression •
   29 expression: expression • PLUS expression
   30           | expression • MINUS expression
   31           | expression • TIMES expression
   32           | expression • DIVIDE expression

    PLUS    shift, and go to state 45
    MINUS   shift, and go to state 46
    TIMES   shift, and go to state 47
    DIVIDE  shift, and go to state 48

    $default  reduce using rule 12 (declaration_core)


State 58

   34 expression: LPAREN expression RPAREN •

    $default  reduce using rule 34 (expression)


State 59

   29 expression: expression • PLUS expression
   29           | expression PLUS expression •
   30           | expression • MINUS expression
   31           | expression • TIMES expression
   32           | expression • DIVIDE expression

    TIMES   shift, and go to state 47
    DIVIDE  shift, and go to state 48

    $default  reduce using rule 29 (expression)


State 60

   29 expression: expression • PLUS expression
   30           | expression • MINUS expression
   30           | expression MINUS expression •
   31           | expression • TIMES expression
   32           | expression • DIVIDE expression

    TIMES   shift, and go to state 47
    DIVIDE  shift, and go to state 48

    $default  reduce using rule 30 (expression)


State 61

   29 expression: expression • PLUS expression
   30           | expression • MINUS expression
   31           | expression • TIMES expression
   31           | expression TIMES expression •
   32           | expression • DIVIDE expression

    $default  reduce using rule 31 (expression)


State 62

   29 expression: expression • PLUS expression
   30           | expression • MINUS expression
   31           | expression • TIMES expression
   32           | expression • DIVIDE expression
   32           | expression DIVIDE expression •

    $default  reduce using rule 32 (expression)


State 63

   21 for_statement: FOR LPAREN for_init SEMICOLON condition • SEMICOLON for_increment RPAREN statement

    SEMICOLON  shift, and go to state 71


State 64

   29 expression: expression • PLUS expression
   30           | expression • MINUS expression
   31           | expression • TIMES expression
   32           | expression • DIVIDE expression
   38 condition: expression LT expression •

    PLUS    shift, and go to state 45
    MINUS   shift, and go to state 46
    TIMES   shift, and go to state 47
    DIVIDE  shift, and go to state 48

    $default  reduce using rule 38 (condition)


State 65

   29 expression: expression • PLUS expression
   30           | expression • MINUS expression
   31           | expression • TIMES expression
   32           | expression • DIVIDE expression
   40 condition: expression LE expression •

    PLUS    shift, and go to state 45
    MINUS   shift, and go to state 46
    TIMES   shift, and go to state 47
    DIVIDE  shift, and go to state 48

    $default  reduce using rule 40 (condition)


State 66

   29 expression: expression • PLUS expression
   30           | expression • MINUS expression
   31           | expression • TIMES expression
   32           | expression • DIVIDE expression
   37 condition: expression GT expression •

    PLUS    shift, and go to state 45
    MINUS   shift, and go to state 46
    TIMES   shift, and go to state 47
    DIVIDE  shift, and go to state 48

    $default  reduce using rule 37 (condition)


State 67

   29 expression: expression • PLUS expression
   30           | expression • MINUS expression
   31           | expression • TIMES expression
   32           | expression • DIVIDE expression
   39 condition: expression GE expression •

    PLUS    shift, and go to state 45
    MINUS   shift, and go to state 46
    TIMES   shift, and go to state 47
    DIVIDE  shift, and go to state 48

    $default  reduce using rule 39 (condition)


State 68

   29 expression: expression • PLUS expression
   30           | expression • MINUS expression
   31           | expression • TIMES expression
   32           | expression • DIVIDE expression
   41 condition: expression EQ expression •

    PLUS    shift, and go to state 45
    MINUS   shift, and go to state 46
    TIMES   shift, and go to state 47
    DIVIDE  shift, and go to state 48

    $default  reduce using rule 41 (condition)


State 69

   29 expression: expression • PLUS expression
   30           | expression • MINUS expression
   31           | expression • TIMES expression
   32           | expression • DIVIDE expression
   42 condition: expression NE expression •

    PLUS    shift, and go to state 45
    MINUS   shift, and go to state 46
    TIMES   shift, and go to state 47
    DIVIDE  shift, and go to state 48

    $default  reduce using rule 42 (condition)


State 70

   19 if_statement: IF LPAREN condition RPAREN statement •
   20             | IF LPAREN condition RPAREN statement • ELSE statement

    ELSE  shift, and go to state 72

    ELSE      [reduce using rule 19 (if_statement)]
    $default  reduce using rule 19 (if_statement)


State 71

   21 for_statement: FOR LPAREN for_init SEMICOLON condition SEMICOLON • for_increment RPAREN statement

    ID  shift, and go to state 4

    $default  reduce using rule 27 (for_increment)

    assignment_core  go to state 73
    increment_core   go to state 74
    for_increment    go to state 75


State 72

   20 if_statement: IF LPAREN condition RPAREN statement ELSE • statement

    ID         shift, and go to state 4
    FOR        shift, and go to state 5
    IF         shift, and go to state 6
    INT        shift, and go to state 7
    SEMICOLON  shift, and go to state 8
    LBRACE     shift, and go to state 9

    statement            go to state 76
    declaration_core     go to state 11
    declaration          go to state 12
    assignment_core      go to state 13
    assignment           go to state 14
    increment_core       go to state 15
    increment_statement  go to state 16
    if_statement         go to state 17
    for_statement        go to state 18
    block                go to state 19


State 73

   25 for_increment: assignment_core •

    $default  reduce using rule 25 (for_increment)


State 74

   26 for_increment: increment_core •

    $default  reduce using rule 26 (for_increment)


State 75

   21 for_statement: FOR LPAREN for_init SEMICOLON condition SEMICOLON for_increment • RPAREN statement

    RPAREN  shift, and go to state 77


State 76

   20 if_statement: IF LPAREN condition RPAREN statement ELSE statement •

    $default  reduce using rule 20 (if_statement)


State 77

   21 for_statement: FOR LPAREN for_init SEMICOLON condition SEMICOLON for_increment RPAREN • statement

    ID         shift, and go to state 4
    FOR        shift, and go to state 5
    IF         shift, and go to state 6
    INT        shift, and go to state 7
    SEMICOLON  shift, and go to state 8
    LBRACE     shift, and go to state 9

    statement            go to state 78
    declaration_core     go to state 11
    declaration          go to state 12
    assignment_core      go to state 13
    assignment           go to state 14
    increment_core       go to state 15
    increment_statement  go to state 16
    if_statement         go to state 17
    for_statement        go to state 18
    block                go to state 19


State 78

   21 for_statement: FOR LPAREN for_init SEMICOLON condition SEMICOLON for_increment RPAREN statement •

    $default  reduce using rule 21 (for_statement)
